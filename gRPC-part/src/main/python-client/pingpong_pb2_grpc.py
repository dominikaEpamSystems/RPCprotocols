# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pingpong_pb2 as PingPong__pb2


class PingPongStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendPingPong = channel.unary_unary(
            '/com.epam.RPCprotocols.pingpong/SendPingPong',
            request_serializer=PingPong__pb2.PingPongRequest.SerializeToString,
            response_deserializer=PingPong__pb2.PingPongReply.FromString,
        )


class PingPongServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendPingPong(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PingPongServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'SendPingPong': grpc.unary_unary_rpc_method_handler(
            servicer.SendPingPong,
            request_deserializer=PingPong__pb2.PingPongRequest.FromString,
            response_serializer=PingPong__pb2.PingPongReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'com.epam.RPCprotocols.pingpong', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class PingPong(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendPingPong(request,
                     target,
                     options=(),
                     channel_credentials=None,
                     call_credentials=None,
                     insecure=False,
                     compression=None,
                     wait_for_ready=None,
                     timeout=None,
                     metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.epam.RPCprotocols.pingpong/SendPingPong',
                                             PingPong__pb2.PingPongRequest.SerializeToString,
                                             PingPong__pb2.PingPongReply.FromString,
                                             options, channel_credentials,
                                             insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
